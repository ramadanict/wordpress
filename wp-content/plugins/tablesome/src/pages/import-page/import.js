import{LexoRank}from"lexorank";import formPage from"./form";import{tablesome_format}from"./../../table/src/wrapper/date-fns";const Import={process:function(e){this.readAndSendDatafromFile(e)},validateFile:function(e){const t={type:"success",message:"Validation is done, Go ahead to import your data."};if(void 0===e.file)return t.type="fail",t.message="Please attach the file",t;const n=Import._getSupportedFormats();return-1==n.indexOf(e.extension)?(t.type="fail",t.message="Only Supports with "+n.join()+" file formats",t):t},readAndSendDatafromFile:function(e){const t=new FileReader;t.onload=function(t){const n=t.target.result;let o;try{o=XLSX.read(n,{type:"array",cellDates:!0})}catch(t){return formPage.stopSpinner(),formPage.enableSubmitButton(),void alert(t)}let a=o.SheetNames[0],r=o.Sheets[a],s=XLSX.utils.sheet_to_json(r,{defval:"",header:1});const l=Import.getColumns(s,e);Import.createTableRequest({table_title:e.table_title,read_first_row_as_column:e.read_first_row_as_column,columns:l.columns,records:Import.getRows(s,e),last_column_id:l.last_column_id})},t.readAsArrayBuffer(e.file)},createTableRequest:function(e){fetch(tablesome_ajax_object.api_endpoints.create_or_update_table,{method:"post",headers:{"Content-Type":"application/json","X-WP-Nonce":tablesome_ajax_object.rest_nonce},body:JSON.stringify({table_title:e.table_title,columns:e.columns,last_column_id:e.last_column_id})}).then((function(e){return e.json()})).then((function(e){return e})).then((function(t){"success"==t.status&&t.table_id>0&&Import.sendRecords({records_inserted:e.records,table_id:t.table_id,type:"IMPORT_DATA"})})).catch((function(e){}))},sendRecords:function(e){fetch(tablesome_ajax_object.api_endpoints.import_records,{method:"post",headers:{"Content-Type":"application/json","X-WP-Nonce":tablesome_ajax_object.rest_nonce},body:JSON.stringify(e)}).then((function(t){alert("Table Imported, Successfully.");let n=new URL(tablesome_ajax_object.edit_table_url);n.searchParams.set("post",e.table_id),window.location.replace(n)})).then((function(e){})).catch((function(e){}))},getColumns:function(e,t){let n=e.length>=10?e.slice(0,10):e,o=[],a=1;if(t.read_first_row_as_column)for(let e=0;e<n[0].length;e++)o.push({id:a,name:n[0][e]}),a++;else for(let e=1;e<=n[1].length;e++)o.push({id:a,name:"Column Name "+e}),a++;return o=Import.getFormattedColumns(o,n),{columns:o,last_column_id:a}},getRows:function(e,t){let n=[],o=LexoRank.min().genNext().toString();return e.forEach((function(e,a){let r=t.read_first_row_as_column&&0==a,s=[];e.forEach((function(e,t){let n=e;if(e instanceof Date&&!isNaN(e)){const t=6e4*(new Date).getTimezoneOffset();e=new Date(e.valueOf()-t).valueOf(),n=tablesome_format(e,tablesome_settings.date_format)}s.push({html:n,value:e})})),r||(n.push({record_id:0,content:Object.values(s),rank_order:o}),o=LexoRank.parse(o).genNext().toString())})),n},_getSupportedFormats:function(){return["xlsx","xlsm","xls","xla","csv"]},_isEmail:function(e){return!!/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/.test(e)},_isHTMLContent:function(e){let t=(new DOMParser).parseFromString(e,"text/html");return Array.from(t.body.childNodes).some((e=>1===e.nodeType))},getFormattedColumns:function(e,t){return e.map((function(e,n){let o="text",a={text:0,date:0,number:0,email:0,textarea:0,url:0};for(let e=0;e<t.length;e++){t[e].forEach((function(e,t){if(t==n){e instanceof Date&&!isNaN(e)?o="date":"number"==typeof e?o="number":Import._isUrl(e)?o="url":Import._isEmail(e)?o="email":Import._isHTMLContent(e)&&(o="textarea");let t=a[o];a[o]=parseInt(t)+1}}))}const r=Object.values(a).reduce((function(e,t){return Math.max(e,t)}),0),s=Object.keys(a).find((e=>a[e]===r));return{id:e.id,name:e.name,format:s}}))},_isUrl:function(e){try{new URL(e)}catch(e){return!1}return!0}};export default Import;