import reducersClass from"./reducers";import filterValues,{months,dateOperatorsDefinate,dateOperatorsIndefinate,absoluteContextuals,relativeContextuals}from"./../values/filterValues";import{tablesome_format,tablesome_isValid,tablesome_PHPDate}from"./../src/wrapper/date-fns";import{LexoRank}from"lexorank";import{writable,readable,derived,get}from"svelte/store";import WorkflowOptions from"../svelte/settings/workflow/utils/options.js";import WorkflowOptionsGetter from"./../svelte/settings/workflow/utils/optionsGetter";import WorkflowEventHandler from"./../svelte/settings/workflow/utils/eventHandler";class Store{tableTitle;mode;rows;tableID;columns;rowLimit;columnLimit;currentPage;lastColumnID;lastStateRecordID;optionsStatus;filters;sortOrder;triggers;columnsInserted;columnsDuplicated;columnsDeleted;recordsUpdated;recordsDeleted;recordsInserted;searchQuery;activeRowIndex;activeCellIndex;activeColumnIndex;sfsRecords;viewableRecords;numOfTotalPages;manipulators;computedFilterOptions;constructor(t){this.tableID=t.tableID,this.mode=writable(t.mode||"editor"),this.hooks=t.hooks,this.columns=writable(t.columns),this.columnLimit=t.columnLimit,this.rows=writable(t.rows),this.tableTitle=readable(t.tableTitle),this.rowLimit=t.rowLimit,this.editorState=writable(t.editorState||{}),this.display=writable(t.display||{}),this.style=writable(t.style||{}),this.lastColumnID=t.lastColumnID||"",this.currentPage=writable(0),this.lastColumnID=writable(t.lastColumnID||1),this.lastStateRecordID=writable(t.lastStateRecordID||1),this.filters=writable(t.filters||[]);let e=new WorkflowOptionsGetter(this),s=new WorkflowEventHandler(this),r={triggers:t.triggers&&t.triggers.length?t.triggers:[{}],options:WorkflowOptions,optionsStatus:{},optionsGetter:e.getter,eventHandler:s.eventHandler};this.workflow=writable(r),this.optionsStatus=writable({isFilterOptionActive:!1,focusElement:""}),this.columnsInserted=writable([]),this.columnsDuplicated=writable([]),this.columnsDeleted=writable([]),this.recordsUpdated=writable(t.recordsUpdated||[]),this.recordsDeleted=writable([]),this.recordsInserted=writable([]),this.searchQuery=writable(null),this.sortOrder=writable(null),this.activeRowIndex=writable(null),this.activeCellIndex=writable(null),this.activeColumnIndex=writable(null);const o=get(this.rows),l=get(this.columns),i=get(this.recordsInserted);if(0==l.length&&0==o.length&&0==this.tableID&&0==get(this.filters).length){l.push({id:get(this.lastColumnID),name:"Column Name",format:"text"});let t={record_id:0,stateRecordID:get(this.lastStateRecordID),content:[{type:"text",value:"",html:""}],rank_order:LexoRank.min().genNext().toString(),created_at:tablesome_PHPDate(),updated_at:tablesome_PHPDate()};o.push(t),i.push(t),this.columns.set(l),this.rows.set(o),this.recordsInserted.set(i)}this.reducers=new reducersClass(t.hooks),this.manipulators=derived([this.columns,this.currentPage,this.searchQuery,this.filters,this.sortOrder,this.activeColumnIndex,this.display,this.mode],(([t,e,s,r,o,l,i,a])=>({pagination:{numOfRecordsPerPage:"read-only"==a?i.numOfRecordsPerPage:10,currentPage:e},search:s,columns:t,filters:r,tableSort:{sortingBy:i.sortingBy,sortingOrder:i.sortingOrder,mode:a},sort:{order:o,column:t[l],index:l}}))),this.sfsRecords=derived([this.rows,this.manipulators],(([t,e])=>this.reducers.getSfsRecords(t,e))),this.viewableRecords=this.getViewableRecords(),this.numOfTotalPages=this.getNumOfTotalPages(),this.calculatedColumnValues=this.getCalculatedColumnValues(),this.computedFilterOptions=this.getComputedFilterOptions()}getNumOfTotalPages(){return derived([this.sfsRecords,this.mode,this.display],(([t,e,s])=>{let r="read-only"==e?s.numOfRecordsPerPage:10;return Math.ceil(t.length/r)}))}updateEditorState(t,e){this.editorState.update((s=>(s[t]=e,s)))}setDisplayField(t,e){this.display.update((s=>(s[t]=e,s)))}setStyleField(t,e){this.style.update((s=>(s[t]=e,s)))}getCalculatedColumnValues(){return derived([this.sfsRecords,this.columns],(([t,e])=>{let s=[];return e.forEach(((e,r)=>{let o="";if("number"==e.format&&e.calculate&&"none"!=e.calculate){o=0;let s=0,l=0,i=0,a=0,n=0,d=0;const c=t=>(t=parseFloat(t),isNaN(t)?0:t);switch(t.forEach((t=>{let e=c(t.content[r].value);e?(s+=e,0==l?(i=e,a=e):(i=Math.min(i,e),a=Math.max(a,e)),n++):d++,l++})),e.calculate){case"sum":o=s;break;case"average":o=s/n;break;case"count":o=l;break;case"min":o=i;break;case"max":o=a;break;case"non_empty_count":o=n;break;case"empty_count":o=d}o=+o.toFixed(3)}s.push(o)})),s}))}getComputedFilterOptions(){return derived(this.filters,(t=>(t.forEach((t=>{t.availableOperators=this.getOperators(t.format,t.contextual.value);let e=t.operator.value;return-1==t.availableOperators.findIndex((t=>t.value===e))&&(t.operator=t.availableOperators[0]),t.availableContextuals=this.getContextuals(e),t.availableMonths=months,t})),t)))}getOperators(t,e){let s=filterValues[t];return"date"==t&&("month"==e||"year"==e||"exact_date"==e||null==e?(s=[...dateOperatorsDefinate],s.splice(2,0,...dateOperatorsIndefinate)):s=[...dateOperatorsDefinate]),s}getContextuals(t){let e=[...relativeContextuals];return"="!=t&&"!="!=t&&null!=t||(e=[...absoluteContextuals,...relativeContextuals]),e}getViewableRecords(){return derived([this.sfsRecords,this.manipulators],(([t,e])=>this.reducers.getViewableRecords(t,e)))}setCurrentPage(t){this.currentPage.set(t)}setOptionStatus(t){this.optionsStatus.hasOwnProperty(t.name)&&(this.optionsStatus[t.name]=t.value)}setSearchQuery(t){this.searchQuery.set(t)}setSortOrder(t){this.sortOrder.set(t)}addColumn(t,e){const s=get(this.rows),r=get(this.columns),o=this._getIncrementedColumnID();let l=r.length;null!==t&&(l="left"==e?t:t+1);let i={id:o,name:"Column Name",format:"text"};r.splice(l,0,i),s.map((t=>{t.content.splice(l,0,{type:"text",value:"",html:""})})),this.columns.set(r),this.rows.set(s),this.insertColumn(l)}moveColumn(t,e){const s=get(this.rows),r=get(this.columns);if(0==t&&"left"==e||t==r.length-1&&"right"==e)return;let o="left"==e?t-1:t+1,l=r[t];r.splice(t,1),r.splice(o,0,l),s.map((e=>{let s=e.content[t];e.content.splice(t,1),e.content.splice(o,0,s)})),this.columns.set(r),this.rows.set(s)}insertColumn(t){if("0"==this.tableID)return;const e=get(this.columns)[t];e.index=t;const s=get(this.columnsInserted);s.push(e),this.columnsInserted.set(s)}deleteColumn(t){this.sortOrder.set(null);const e=get(this.rows),s=get(this.columns),r=get(this.columnsDeleted);r.push(parseInt(s[t].id)),s.splice(t,1),e.map((e=>{e.content.splice(t,1)})),this.columns.set(s),this.rows.set(e),this.columnsDeleted.set(r),this.activeColumnIndex.set(null)}duplicateColumn(t){const e=get(this.rows),s=get(this.columns),r=this._getIncrementedColumnID();let o=t+1,l=Object.assign({},s[t]);l.id=r,s.splice(o,0,l),e.map((e=>{let s=Object.assign({},e.content[t]);e.content.splice(o,0,s)})),this.columns.set(s),this.rows.set(e),this.columnDuplicate(t)}columnDuplicate(t){if("0"==this.tableID)return;let e={index:t,id:get(this.columns)[t].id};const s=get(this.columnsDuplicated);s.push(e),this.columnsDuplicated.set(s)}addRow(t){t=parseInt(t);let e=this._getEmptyRow(t);const s=get(this.rows),r=get(this.columns);for(let t=0;t<r.length;t++)e.content.push({type:r[t].format,value:"",html:""});s.splice(t+1,0,e),this.rows.set(s),this.recordInsert(t)}recordDuplicate(t){t=parseInt(t);const e=this._getEmptyRow(t),s=get(this.rows);e.content=JSON.parse(JSON.stringify(s[t].content)),s.splice(t+1,0,e),this.rows.set(s),this.recordInsert(t)}recordDragged(t,e,s){let r,o;const l=get(this.rows);if(null!=t&&null!=e){const i=LexoRank.parse(l[t].rank_order),a=LexoRank.parse(l[e].rank_order);o=e-1,o=s>o?e:o,r=i.between(a).toString()}else if(null==t){o=e<=0?e:e-1,r=LexoRank.parse(l[e].rank_order).genPrev().toString()}else if(null==e){o=t+1,r=LexoRank.parse(l[t].rank_order).genNext().toString()}s!=o&&(l[s].rank_order=r,this._movePosition(l,s,o),this.rows.set(l),this.recordUpdate(s))}recordInsert(t){const e=get(this.recordsInserted),s=Object.assign({},get(this.rows)[t+1]);s.record_index=t+1,e.push(s),this.recordsInserted.set(e)}deleteRow(t){this.recordDelete(t);const e=get(this.rows);e.splice(t,1),this.rows.set(e)}recordDelete(t){if("0"==this.tableID)return;const e=get(this.rows)[t].record_id,s=get(this.recordsInserted),r=get(this.recordsDeleted),o=s.findIndex((e=>e.record_index===t));if(0==e&&-1!==o)return s.splice(o,1),void this.recordsInserted.set(s);r.push(e),this.recordsDeleted.set(r)}changeColumnName(t,e){this.columns.update((s=>(s[e].name=t,s)))}changeColumnOptions(t,e,s){this.columns.update((r=>(r[t][e]=s,r)))}changeCellType(t,e){const s=get(this.columns),r=get(this.rows);s[t].format!=e&&(s[t].format=e,"url"==e&&null==s[t].no_follow&&(s[t].no_follow=!1),"url"==e&&null==!s[t].open_in_new_tab&&(s[t].open_in_new_tab=!0),r.map((s=>{if("number"==e&&(s[t]=isNaN(Number(s[t]))||""==s[t]?"":Number(s[t])),"text"==e&&(s[t]=String(s[t])),"date"==e){let e=this.dateParse(s.content[t].value,s.content[t].html);s.content[t].type="date",s.content[t].value=e.value,s.content[t].html=e.html}})),this.columns.set(s),this.rows.set(r))}dateParse(t,e){const s={value:t,html:e};if(t&&"string"==typeof t&&"undefined"!=t&&NaN!=t&&"0"!=t){let e=parseInt(Date.parse(t));s.value=e,s.html=tablesome_isValid(e)?tablesome_format(e,tablesome_settings.date_format):""}return s}setActiveRowIndex(t){this.activeRowIndex.set(t)}setActiveCellIndex(t){this.activeCellIndex.set(t)}deleteFilter(t){if(t>-1){const e=get(this.filters);e.splice(t,1),this.filters.set(e)}}addFilter(){const t={column_index:0,format:get(this.columns)[0].format,contextual:"",value:""};t.availableOperators=this.getOperators(t.format,""),t.operator=t.availableOperators[0],this.filters.update((e=>(e.push(t),e))),this.activeCellIndex.set(null)}updateFilters(t){let e=this;t.forEach((t=>{let s=t.column_index;t.column_index=s,t.format=e.columns[s].format})),this.filters=t}updateFilter(t,e){t.format=get(this.columns)[t.column_index].format,this.filters.update((s=>(s[e]=t,s)))}setActiveColumnIndex(t){this.activeColumnIndex.set(t)}updateCellValue(t){let e=t.rowIndex,s=get(this.rows),r={rows:s,rowIndex:e,cellData:t};r=this.hooks.applyFilters("getRecords",r),s=r.rows,"value"in t&&(s[e].content[t.cellIndex].value=t.value),"html"in t&&(s[e].content[t.cellIndex].html=t.html),"attachment"in t&&(s[e].content[t.cellIndex].attachment=t.attachment),s[e].updated_at=tablesome_PHPDate(),this.rows.set(s),this.recordUpdate(e)}recordUpdate(t){const e=get(this.rows),s=get(this.recordsInserted),r=s.findIndex((s=>s.stateRecordID===e[t].stateRecordID)),o=!s[t]&&-1==r,l=get(this.recordsUpdated),i=l.findIndex((s=>s.stateRecordID===e[t].stateRecordID));!l[t]&&-1==i&&o&&(l.push(e[t]),this.recordsUpdated.set(l))}_movePosition(t,e,s){const r=t[e];t.splice(e,1),t.splice(s,0,r)}_getEmptyRow(t){this.lastStateRecordID.update((t=>t+1));const e=get(this.rows),s=e.length,r=e[t].rank_order,o=t+1;let l="";if(s==o)l=LexoRank.parse(r).genNext().toString();else{const t=LexoRank.parse(r),s=LexoRank.parse(e[o].rank_order);l=t.between(s).toString()}return{record_id:0,stateRecordID:get(this.lastStateRecordID),content:[],rank_order:l,created_at:tablesome_PHPDate(),updated_at:tablesome_PHPDate()}}_getIncrementedColumnID(){return this.lastColumnID.set(get(this.lastColumnID)+1),get(this.lastColumnID)}}export default Store;